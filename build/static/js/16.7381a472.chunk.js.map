{"version":3,"sources":["views/Account/AddNew.js","../node_modules/rc-util/es/Children/toArray.js"],"names":["Option","MonthPicker","AddNew","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","currentYear","Date","getFullYear","year","moment","format","date","console","log","user","id","match","params","userid","parentInfo","JSON","stringify","setState","isLoading","addNewGrandparent","then","resp","data","success","history","push","pathname","error","finally","validateToPhoneNumber","rule","value","callback","test","state","getFieldDecorator","this","prefixSelector","initialValue","style","width","lg","span","offset","md","marginTop","marginBottom","maxWidth","margin","textAlign","fontWeight","fontSize","labelCol","xs","sm","wrapperCol","onSubmit","Item","label","rules","type","message","required","disabled","whitespace","title","validator","addonBefore","placeholder","htmlType","loading","Component","create","name","withRouter","toArray","children","ret","Children","forEach","c"],"mappings":"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","file":"static/js/16.7381a472.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Input, Tooltip, Icon, Col, Button, Card, message, DatePicker, Select } from 'antd'\nimport { addNewGrandparent } from '../../requests'\nimport { withRouter } from 'react-router-dom'\nimport * as moment from 'moment'\n\n\nconst { Option } = Select;\nconst { MonthPicker } = DatePicker\nclass AddNew extends Component {\n    constructor(){\n        super()\n        this.state= {\n            isLoading: false\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n          if (!err) {\n            // console.log(values[\"lastVaccineDate\"].year())\n            const currentYear = new Date().getFullYear()\n            if(values[\"lastVaccineDate\"].year() < currentYear){\n                values[\"nextVaccineDate\"] = moment().format('YYYY-MM-DD')\n            }else{\n                values[\"nextVaccineDate\"] = `${currentYear+1}-04-01`\n            }\n            // console.log(values[\"nextVaccineDate\"])\n            const date = values['lastVaccineDate'].format(\"YYYY-MM-01\")\n            values[\"lastVaccineDate\"] = date\n            console.log('Received values of form: ', values)\n            // values.receiveNotification = values.receiveNotification? values.receiveNotification : false\n            const user =  {id: this.props.match.params.id}\n            values.userid = user\n            const parentInfo =  JSON.stringify(values)\n            this.setState({\n                isLoading: true\n            })\n            addNewGrandparent(parentInfo)\n                .then(resp=>{\n                    // console.log(resp)\n                    if(resp.data){\n                        message.success(\"You have added successfully!\")\n                        this.props.history.push({\n                            pathname: `/account`,\n                        })\n                    }else{\n                        message.error(\"Failed to add!\")\n                    }\n                })\n                .finally(()=>{\n                    this.setState({\n                        isLoading: false\n                    })\n                })\n            }\n        });\n    };\n    \n    validateToPhoneNumber = (rule, value, callback) => {\n        const phonePattern = /^04\\d{8}$/\n        console.log(\"111\")\n        if(!phonePattern.test(value)){\n            console.log(\"222\")\n            callback('You should input legal phone number! Such as: 0413174686 ');\n        }else{\n            console.log(\"333\")\n            callback()\n        }\n    }\n\n    render() {\n        // console.log(moment().format('YYYY-MM-DD'))\n        // console.log(this.props.match.params.id)\n        const { getFieldDecorator } = this.props.form;\n        const prefixSelector = getFieldDecorator('prefix', {\n            initialValue: '61',\n          })(\n            <Select style={{ width: 70 }}>\n              <Option value=\"61\">+61</Option>\n            </Select>,\n          )\n        \n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 24 },\n                sm: { span: 8 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 16 },\n            },\n            };\n        const tailFormItemLayout = {\n        wrapperCol: {\n            xs: {\n            span: 24,\n            offset: 0,\n            },\n            sm: {\n            span: 16,\n            offset: 8,\n            },\n            },\n        };\n\n        const config = {\n            rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n        };\n\n        return (\n            <div>\n                <Col lg={{span:12, offset:6}} md = {{span: 22, offset:1}} style={{marginTop:\"24px\", marginBottom:\"24px\"}}>\n                <Card \n                    style={{maxWidth: \"500px\", margin: \"auto\"}}\n                >\n                    <div style={{textAlign:\"center\", fontWeight:\"bold\", fontSize: \"24px\", marginBottom:\"20px\"}}>Add new</div>\n                <Form {...formItemLayout} onSubmit={this.handleSubmit} >\n                    <Form.Item label=\"E-mail\" >\n                    {getFieldDecorator('email', {\n                        rules: [\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                        ],\n                    })(<Input disabled = {this.state.isLoading} />)}\n                    </Form.Item>\n                    <Form.Item\n                    label='name'\n                    >\n                    {getFieldDecorator('name', {\n                        rules: [{ required: true, message: 'Please input name!', whitespace: true }],\n                    })(<Input disabled = {this.state.isLoading}/>)}\n                    </Form.Item>\n                    <Form.Item\n                    label={\n                        <span>\n                        Relationship&nbsp;\n                        <Tooltip title=\"What`s the relationship with he/she?\">\n                            <Icon type=\"question-circle-o\" />\n                        </Tooltip>\n                        </span>\n                    }\n                    >\n                    {getFieldDecorator('relationship', {\n                        rules: [{ required: true, message: 'Please input relationship!', whitespace: true }],\n                    })(<Input disabled = {this.state.isLoading}/>)}\n                    </Form.Item>\n                    <Form.Item \n                        label={\n                            <span>\n                            Vaccine record&nbsp;\n                            <Tooltip title=\"When was the last tiem that the person took the flu shot?\">\n                            <Icon type=\"question-circle-o\" />\n                            </Tooltip>\n                            </span>\n                        }\n                    >\n                        {getFieldDecorator('lastVaccineDate', config)(<MonthPicker />)}\n                    </Form.Item>\n                    <Form.Item label=\"Phone Number\">\n                        {getFieldDecorator('phoneNumber', {\n                        rules: [{ required: true, message: 'Please input your phone number!' }, { validator: this.validateToPhoneNumber }],\n                        })(<Input addonBefore={prefixSelector} placeholder=\"e.g.0431374686\" style={{ width: '100%' }} />)}\n                    </Form.Item>\n                    <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={this.state.isLoading}>\n                        Add\n                    </Button>\n                    </Form.Item>\n                </Form>\n                </Card>\n            </Col>\n            </div>\n        )\n    }\n}\n\nexport default Form.create({ name: 'newGrandparent' })(withRouter(AddNew))","import React from 'react';\nexport default function toArray(children) {\n  var ret = [];\n  React.Children.forEach(children, function (c) {\n    ret.push(c);\n  });\n  return ret;\n}"],"sourceRoot":""}